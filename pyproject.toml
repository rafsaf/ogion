[tool.poetry]
authors = ["RafaÅ‚ Safin <rafal.safin@rafsaf.pl>"]
description = "A tool for performing scheduled database backups and transferring encrypted data to secure clouds, for home labs, hobby projects, etc., in environments such as k8s, docker, vms."
license = "GNU GPLv3"
name = "ogion"
version = "5.2"

[tool.poetry.dependencies]
python = "^3.12"

azure-identity = "^1.14.0"
azure-storage-blob = "^12.18.2"
boto3 = "^1.34.74"
croniter = "^2.0.3"
google-cloud-storage = "^2.16.0"
pydantic = "^2.6.2"
pydantic-settings = "^2.2.1"

[tool.poetry.group.dev.dependencies]
coverage = "^7.5.1"
markdown-include = "^0.8.1"
mike = "^2.1.1"
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.17"
mkdocstrings = { extras = ["python"], version = "^0.25.1" }
mypy = "^1.10.0"
pre-commit = "^3.7.1"
pymdown-extensions = "^10.8"
pyyaml = "^6.0.1"
requests = "^2.31.0"
ruff = "^0.4.4"
types-croniter = "^2.0.0.20240423"
types-google-cloud-ndb = "^2.3.0.20240311"
types-pyyaml = "^6.0.12.20240311"
types-requests = "^2.31.0.20240406"

[tool.poetry.group.tests.dependencies]
freezegun = "^1.5.1"
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
pytest-env = "^1.0.1"
pytest-xdist = "^3.6.1"
python-dotenv = "^1.0.1"
responses = "^0.25.0"

[tool.pytest.ini_options]
addopts = "-v --cov --cov-report term-missing --cov-fail-under 100 -n auto"
env = [
  "BACKUP_MAX_NUMBER=1",
  "BACKUP_PROVIDER=",
  "LOG_FOLDER_PATH=/tmp/pytest_ogion_env_vars_hook_logs_folder",
  "LOG_LEVEL=DEBUG",
  "SUBPROCESS_TIMEOUT_SECS=5",
  "ZIP_ARCHIVE_PASSWORD=very_unpleasant:password-_-12!@#%^&*()/;><.,][`~'",
]
filterwarnings = [
  "ignore:Type google._upb._message.ScalarMapContainer uses PyType_Spec",
  "ignore:Type google._upb._message.MessageMapContainer uses PyType_Spec",
]

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
# pycodestyle, pyflakes, isort, pylint, pyupgrade
select = ["E", "F", "I", "PL", "UP", "W"]

[tool.coverage.run]
omit = ["ogion/tools/*"]
source = ["ogion"]

[tool.mypy]
ignore_missing_imports = true
python_version = "3.12"
strict = true

[tool.poetry.scripts]
ogion = "ogion.main:main"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
